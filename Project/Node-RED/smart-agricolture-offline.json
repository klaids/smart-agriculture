[
    {
        "id": "6c4ef7206a54756d",
        "type": "subflow",
        "name": "STM32 L4",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 280,
                "wires": [
                    {
                        "id": "c97d6785e5bdaf93"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c97d6785e5bdaf93",
        "type": "function",
        "z": "6c4ef7206a54756d",
        "name": "Get Values",
        "func": "\nlet msg1 = {};\nlet msg2 = {};\nlet msg3 = {};\nlet msg4 = {};\nlet msg5 = {};\nlet msg6 = {};\n\nvar values = msg.payload.out\n\nnode.warn(values)\n\nvar temp = msg.payload.out.T\nvar hum = msg.payload.out.H\nvar soil = msg.payload.out.S\nvar pressure = msg.payload.out.P\nvar uv = msg.payload.out.U\n\nmsg1.topic = \"Temperature\"\nmsg1.payload = temp\n\nmsg2.topic = \"Humidity\"\nmsg2.payload = hum\n\nmsg3.topic = \"Humidity Soil\"\nmsg3.payload = soil\n\nmsg4.topic = \"Pressure\"\nmsg4.payload = pressure\n\nmsg5.topic = \"UV\"\nmsg5.payload = uv\n\nnode.send([msg1, msg2, msg3, msg4, msg5])",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 280,
        "wires": [
            [
                "2a47f29e59ce520f"
            ],
            [
                "6bc4b6a7a4f14d66"
            ],
            [
                "2dab14ac0fd0b471"
            ],
            [
                "978308b11282b63f"
            ],
            [
                "39225f7b3872b202"
            ]
        ]
    },
    {
        "id": "2a47f29e59ce520f",
        "type": "ui_gauge",
        "z": "6c4ef7206a54756d",
        "name": "Temp Gauge",
        "group": "085614973771c19a",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temp Gauge",
        "label": "°C",
        "format": "{{value}}",
        "min": "-40",
        "max": "+85",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 570,
        "y": 80,
        "wires": []
    },
    {
        "id": "978308b11282b63f",
        "type": "ui_gauge",
        "z": "6c4ef7206a54756d",
        "name": "Pressure Gauge",
        "group": "085614973771c19a",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pressure Gauge",
        "label": "hPa",
        "format": "{{value}}",
        "min": "300",
        "max": "1100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 520,
        "y": 360,
        "wires": []
    },
    {
        "id": "39225f7b3872b202",
        "type": "ui_gauge",
        "z": "6c4ef7206a54756d",
        "name": "UV Gauge",
        "group": "085614973771c19a",
        "order": 5,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "UV Gauge",
        "label": "nm",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 510,
        "y": 400,
        "wires": []
    },
    {
        "id": "2dab14ac0fd0b471",
        "type": "ui_gauge",
        "z": "6c4ef7206a54756d",
        "name": "Humidity Soil Gauge",
        "group": "085614973771c19a",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity Soil Gauge",
        "label": "nm",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 540,
        "y": 320,
        "wires": []
    },
    {
        "id": "6bc4b6a7a4f14d66",
        "type": "ui_gauge",
        "z": "6c4ef7206a54756d",
        "name": "Humidity Gauge",
        "group": "085614973771c19a",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity Gauge",
        "label": "Percent",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "085614973771c19a",
        "type": "ui_group",
        "z": "6c4ef7206a54756d",
        "name": "L4",
        "tab": "0f6d015170083263",
        "order": 2,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "4a812b20531a1393",
        "type": "subflow",
        "name": "STM32 L0",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "56b11f59f5b35828"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "56b11f59f5b35828",
        "type": "function",
        "z": "4a812b20531a1393",
        "name": "Get Values",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "b9b4e6fe3cfc52cb"
            ]
        ]
    },
    {
        "id": "b9b4e6fe3cfc52cb",
        "type": "ui_gauge",
        "z": "4a812b20531a1393",
        "name": "Temp Gauge",
        "group": "043bca539eee9986",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temp Gauge",
        "label": "°C",
        "format": "{{msg.payload.out.T}}",
        "min": "-40",
        "max": "+85",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "043bca539eee9986",
        "type": "ui_group",
        "z": "4a812b20531a1393",
        "name": "L0",
        "tab": "0f6d015170083263",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "53e10ede6ba0e308",
        "type": "subflow",
        "name": "STM32 L1",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "5b6558019bba99af"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "5b6558019bba99af",
        "type": "function",
        "z": "53e10ede6ba0e308",
        "name": "Get Values",
        "func": "\nlet msg1 = {};\nlet msg2 = {};\nlet msg3 = {};\nlet msg4 = {};\nlet msg5 = {};\nlet msg6 = {};\n\nvar values = msg.payload.out\n\nnode.warn(values)\n\nvar temp = msg.payload.out.T\nvar hum = msg.payload.out.H\nvar soil = msg.payload.out.S\nvar pressure = msg.payload.out.P\nvar uv = msg.payload.out.U\n\nmsg1.topic = \"Temperature\"\nmsg1.payload = temp\n\nmsg2.topic = \"Humidity\"\nmsg2.payload = hum\n\nmsg3.topic = \"Humidity Soil\"\nmsg3.payload = soil\n\nmsg4.topic = \"Pressure\"\nmsg4.payload = pressure\n\nmsg5.topic = \"UV\"\nmsg5.payload = uv\n\nnode.send([msg1, msg2, msg3, msg4, msg5])",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 260,
        "wires": [
            [
                "b6c82790ba9b608b"
            ],
            [
                "7dd4d64b0d850396"
            ],
            [
                "71f6996b68a4bf63"
            ],
            [
                "159f1bdf67ec4372"
            ],
            [
                "22034ecfaf5e3a1f"
            ]
        ]
    },
    {
        "id": "b6c82790ba9b608b",
        "type": "ui_gauge",
        "z": "53e10ede6ba0e308",
        "name": "Temp Gauge",
        "group": "34ed68ac3c83ff92",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temp Gauge",
        "label": "°C",
        "format": "{{value}}",
        "min": "-40",
        "max": "+85",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "7dd4d64b0d850396",
        "type": "ui_gauge",
        "z": "53e10ede6ba0e308",
        "name": "Humidity Gauge",
        "group": "34ed68ac3c83ff92",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity Gauge",
        "label": "Percent",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "159f1bdf67ec4372",
        "type": "ui_gauge",
        "z": "53e10ede6ba0e308",
        "name": "Pressure Gauge",
        "group": "34ed68ac3c83ff92",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pressure Gauge",
        "label": "hPa",
        "format": "{{value}}",
        "min": "300",
        "max": "1100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 520,
        "y": 340,
        "wires": []
    },
    {
        "id": "22034ecfaf5e3a1f",
        "type": "ui_gauge",
        "z": "53e10ede6ba0e308",
        "name": "UV Gauge",
        "group": "34ed68ac3c83ff92",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "UV Gauge",
        "label": "nm",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 510,
        "y": 380,
        "wires": []
    },
    {
        "id": "71f6996b68a4bf63",
        "type": "ui_gauge",
        "z": "53e10ede6ba0e308",
        "name": "Humidity Soil Gauge",
        "group": "34ed68ac3c83ff92",
        "order": 5,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity Soil Gauge",
        "label": "nm",
        "format": "{{value}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 540,
        "y": 300,
        "wires": []
    },
    {
        "id": "34ed68ac3c83ff92",
        "type": "ui_group",
        "z": "53e10ede6ba0e308",
        "name": "L1",
        "tab": "0f6d015170083263",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": true
    },
    {
        "id": "0f6d015170083263",
        "type": "ui_tab",
        "name": "Devices",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "43e346004b28846d",
        "type": "tab",
        "label": "SA (offline)",
        "disabled": false,
        "info": "This flow read a a payload in HEX, convert it\nin Base64, and put on output the message in ASCII\n\nThis is the OFFLINE version, to test it without a Pi"
    },
    {
        "id": "328487b86b977a7b",
        "type": "function",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Extract Packet",
        "func": "devid=\"12345678901 \"\n\n// the lora lora-packet-converter package expect device id (12) as a string before the Lora wan Packet\nmvk=msg.payload // from the injection \n//node.warn(mvk)\nmsg.payload=mvk\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 320,
        "wires": [
            [
                "08e8eee9ec615a06",
                "2eaa90d40bc65226"
            ]
        ]
    },
    {
        "id": "4eab8dd30aba1b72",
        "type": "function",
        "z": "43e346004b28846d",
        "name": "Sensor data to hex/decode",
        "func": "\nbytes=msg.payload.out // sensor/LoraWAN data playload\n\nnewbytes=Buffer.from(bytes, 'hex')\n//node.warn(newbytes.toString()) ///yeah\n\n//decode ...payload\n//https://learn.adafruit.com/using-lorawan-and-the-things-network-with-circuitpython?view=all\n\nmsg.payload.out = newbytes.toString();\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 520,
        "wires": [
            [
                "2634ee731e2f925d",
                "46e2c15b4037d6d6",
                "c3875d0a28e633ce"
            ]
        ]
    },
    {
        "id": "2634ee731e2f925d",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Sensor Data Decoded",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 500,
        "wires": []
    },
    {
        "id": "08e8eee9ec615a06",
        "type": "debug",
        "z": "43e346004b28846d",
        "d": true,
        "name": "InComing LoraWAN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 320,
        "wires": []
    },
    {
        "id": "2eaa90d40bc65226",
        "type": "lorawan-packet-decrypt-nwkey-appkey",
        "z": "43e346004b28846d",
        "name": "Decrypt LoRaWAN",
        "nsw": "238792b74801de223b50ddd309b8f139",
        "asw": "744826b8703e23a2e6cb8d79eed484bb",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "4eab8dd30aba1b72",
                "373eea0ff157ed10"
            ]
        ]
    },
    {
        "id": "6ec9b0427837fc3a",
        "type": "inject",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Encrypted Message (bytes)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Encrypted Message",
        "payload": "b'40c76ac6aa00060001c738a8cbfb5fc6f2435609707cc314ec8a96edae30c18f4a9062baeb85e45790'",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "202814b4b9c5bd32",
                "9f232ac06fe6386b",
                "5e2d77219556323b"
            ]
        ]
    },
    {
        "id": "5e2d77219556323b",
        "type": "function",
        "z": "43e346004b28846d",
        "name": "HEX to base64",
        "func": "\nmvk=msg.payload // from the injection\n//node.warn(mvk)\nvar base64String = Buffer.from(mvk, 'hex').toString('base64')\n//node.warn(base64String)\nmsg.payload=base64String\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 260,
        "wires": [
            [
                "328487b86b977a7b",
                "dbdb44e9d6ff07d4",
                "2eaa90d40bc65226"
            ]
        ]
    },
    {
        "id": "dbdb44e9d6ff07d4",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Base64 Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 260,
        "wires": []
    },
    {
        "id": "9f232ac06fe6386b",
        "type": "ui_text",
        "z": "43e346004b28846d",
        "d": true,
        "group": "df14c100990c8374",
        "order": 4,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Encrypted Message",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 660,
        "y": 80,
        "wires": []
    },
    {
        "id": "373eea0ff157ed10",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Decrypted",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 110,
        "y": 440,
        "wires": []
    },
    {
        "id": "46e2c15b4037d6d6",
        "type": "ui_text",
        "z": "43e346004b28846d",
        "d": true,
        "group": "df14c100990c8374",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Original Message",
        "format": "{{msg.payload.out}}",
        "layout": "col-center",
        "x": 470,
        "y": 460,
        "wires": []
    },
    {
        "id": "dc479a59520c5ecf",
        "type": "ui_text",
        "z": "43e346004b28846d",
        "group": "df14c100990c8374",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "DevAddr",
        "format": "{{msg.payload.DevAddr}}",
        "layout": "col-center",
        "x": 440,
        "y": 840,
        "wires": []
    },
    {
        "id": "202814b4b9c5bd32",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "HEX Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "800b2868a52d1424",
        "type": "function",
        "z": "43e346004b28846d",
        "name": "Extract DevAddr",
        "func": "\nlet HexString = \"\";\n\nDevAddr=msg.payload.buffers.DevAddr // sensor/LoraWAN data payload\n\n//node.warn(DevAddr)\n\nfor (let i = 0; i < DevAddr.length; i++)\n{\n  hex = DevAddr[i].toString(16).toUpperCase();\n  HexString += hex;\n}\n//node.warn(HexString);\n\nmsg.payload.DevAddr = HexString;\n\nif(DevAddr.includes(\"4A\"))\n    msg.payload.use = \"intern\"\nelse\n    msg.payload.use = \"extern\"\n  \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 860,
        "wires": [
            [
                "dc479a59520c5ecf",
                "479075da3af8a46f",
                "553cc10021d5497e",
                "5a85bf8d3dc03d23",
                "eae741a38c96cbd6"
            ]
        ]
    },
    {
        "id": "479075da3af8a46f",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "DevAddr",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.DevAddr",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 880,
        "wires": []
    },
    {
        "id": "538735d331bad998",
        "type": "ui_date_picker",
        "z": "43e346004b28846d",
        "name": "",
        "label": "date",
        "group": "df14c100990c8374",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "4e9b5a6f4f9d1766",
        "type": "ui_button",
        "z": "43e346004b28846d",
        "name": "Start Reading (From Dashboard)",
        "group": "df14c100990c8374",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start Reading",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "40C54AC4AA00020001228F96D52CAD4C222382CB6FF2BC7CF3F8583BB6764F8514AC5CFD8F312849F8FEDD4B3F5D1A",
        "payloadType": "str",
        "topic": "message",
        "topicType": "str",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "9f232ac06fe6386b",
                "5e2d77219556323b",
                "202814b4b9c5bd32"
            ]
        ]
    },
    {
        "id": "a1fe07eb39eabbd5",
        "type": "inject",
        "z": "43e346004b28846d",
        "name": "First Encrypted Message (str)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "payload"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "404AB1ABAA00AE0201B37914204BF560DE7AFE21930486771382A71F00CAB24E6C081FD9888EA241020D",
        "payloadType": "str",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "9f232ac06fe6386b",
                "5e2d77219556323b",
                "202814b4b9c5bd32"
            ]
        ]
    },
    {
        "id": "bf57076678b78f60",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Informations from Sensors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 560,
        "wires": []
    },
    {
        "id": "54bc10ac59b3b396",
        "type": "ui_gauge",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Temp",
        "group": "403267448a6f0a1d",
        "order": 12,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Temp",
        "label": "°C",
        "format": "{{msg.payload.out.T}}",
        "min": "-40",
        "max": "+85",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 600,
        "wires": []
    },
    {
        "id": "0a21e6846e1974bf",
        "type": "ui_gauge",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Hum",
        "group": "403267448a6f0a1d",
        "order": 13,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Hum",
        "label": "Percent",
        "format": "{{msg.payload.out.H}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 640,
        "wires": []
    },
    {
        "id": "88bd5b21e14b2a69",
        "type": "ui_gauge",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Pressure",
        "group": "403267448a6f0a1d",
        "order": 14,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Pressure",
        "label": "hPa",
        "format": "{{msg.payload.out.P}}",
        "min": "300",
        "max": "1100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 440,
        "y": 680,
        "wires": []
    },
    {
        "id": "5396f9b907488764",
        "type": "ui_gauge",
        "z": "43e346004b28846d",
        "d": true,
        "name": "UV",
        "group": "403267448a6f0a1d",
        "order": 15,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "UV",
        "label": "nm",
        "format": "{{msg.payload.out.U}}",
        "min": "320",
        "max": "410",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 760,
        "wires": []
    },
    {
        "id": "c3875d0a28e633ce",
        "type": "function",
        "z": "43e346004b28846d",
        "name": "Extract Information",
        "func": "\ndataArray = []\ndictArray = {}\n\ntext = msg.payload.out\n//node.warn(text)\n\ntextArray = text.split(\"$\")\ntextArray = textArray.filter(item => item != \"\")\n//node.warn(textArray)\n\nfor(let i = 0; i < textArray.length; i++)\n{\n    dataArray = textArray[i].split(\":\")\n    dictArray[dataArray[0]] = parseFloat(dataArray[1])\n}\n\n//node.warn(dictArray)\n\nmsg.payload.out = dictArray\n\n//node.warn(msg.payload.out.Hum)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 660,
        "wires": [
            [
                "bf57076678b78f60",
                "54bc10ac59b3b396",
                "0a21e6846e1974bf",
                "88bd5b21e14b2a69",
                "55fef13e41f7e284",
                "d0a33b10f6a0ef07",
                "d4c26c169fda3ecb",
                "a16477e184ece9e0",
                "3b930b61d0ed074d",
                "f9d03113efa24b3e",
                "800b2868a52d1424",
                "5396f9b907488764"
            ]
        ],
        "info": "From the string in Input,\nthis node will convert it on a dict\nwith this format: \n{unit_measure : value}"
    },
    {
        "id": "55fef13e41f7e284",
        "type": "ui_gauge",
        "z": "43e346004b28846d",
        "d": true,
        "name": "Humidity Soil",
        "group": "403267448a6f0a1d",
        "order": 15,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Humidity Soil",
        "label": "nm",
        "format": "{{msg.payload.out.S}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 450,
        "y": 720,
        "wires": []
    },
    {
        "id": "d0a33b10f6a0ef07",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Temp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out.T",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 600,
        "wires": []
    },
    {
        "id": "f9d03113efa24b3e",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Hum",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out.H",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 640,
        "wires": []
    },
    {
        "id": "3b930b61d0ed074d",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Pressure",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out.P",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 680,
        "wires": []
    },
    {
        "id": "a16477e184ece9e0",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "Humidity Soil",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out.S",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 720,
        "wires": []
    },
    {
        "id": "d4c26c169fda3ecb",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "UV",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.out.U",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 760,
        "wires": []
    },
    {
        "id": "553cc10021d5497e",
        "type": "change",
        "z": "43e346004b28846d",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload.out",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "2894758b70fad08a"
            ]
        ]
    },
    {
        "id": "2894758b70fad08a",
        "type": "ui_dropdown",
        "z": "43e346004b28846d",
        "d": true,
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "ca0e1e7eb4a4b7f3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "L1 EXT",
                "value": "",
                "type": "str"
            },
            {
                "label": "L0 INT",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 480,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "5a85bf8d3dc03d23",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "MSG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 920,
        "wires": []
    },
    {
        "id": "eae741a38c96cbd6",
        "type": "function",
        "z": "43e346004b28846d",
        "name": "",
        "func": "\n/*\n    0: L0\n    1: L1\n    2: L4\n    */\n\n\nvar Devices = [\"AAC44AC5\", \"AAABB14A\", \"AAC44AC6\"]\n\naddr = msg.payload.DevAddr\n\n//node.warn(addr)\n\nswitch(Devices.indexOf(addr))\n{\n    case 0:\n        node.send([msg, null, null, null, null])\n    break;\n    case 1:\n        node.send([null, msg, null, null, null])\n    break;\n    case 2:\n        node.send([null, null, msg, null, null])\n    break;\n    case 3:\n        node.send([null, null, null, msg, null])\n    break;\n    case 4:\n        node.send([null, null, null, null ,msg])\n    break;\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "5b07101a7fea69ce"
            ],
            [
                "73b92d29c1a2fce0",
                "052e34fee5f12208"
            ],
            [
                "1f337f72add12365"
            ],
            [],
            []
        ]
    },
    {
        "id": "73b92d29c1a2fce0",
        "type": "debug",
        "z": "43e346004b28846d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 1180,
        "wires": []
    },
    {
        "id": "052e34fee5f12208",
        "type": "subflow:53e10ede6ba0e308",
        "z": "43e346004b28846d",
        "name": "STM32 L1",
        "env": [],
        "x": 430,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5b07101a7fea69ce",
        "type": "subflow:4a812b20531a1393",
        "z": "43e346004b28846d",
        "name": "STM32 L0",
        "env": [],
        "x": 430,
        "y": 1060,
        "wires": []
    },
    {
        "id": "1f337f72add12365",
        "type": "subflow:6c4ef7206a54756d",
        "z": "43e346004b28846d",
        "name": "STM32 L4",
        "env": [],
        "x": 430,
        "y": 1140,
        "wires": []
    },
    {
        "id": "df14c100990c8374",
        "type": "ui_group",
        "name": "Default",
        "tab": "87a869ccbb64bd1b",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "403267448a6f0a1d",
        "type": "ui_group",
        "name": "Message",
        "tab": "87a869ccbb64bd1b",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false
    },
    {
        "id": "ca0e1e7eb4a4b7f3",
        "type": "ui_group",
        "name": "Datas",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "87a869ccbb64bd1b",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]